#!/usr/bin/env node

// Test logic isRelevantQuestion
function isRelevantQuestion(message, isAdmin = false) {
  const userKeywords = [
    'computer booking', 'ƒë·∫∑t m√°y', 'booking system', 'h·ªá th·ªëng ƒë·∫∑t m√°y',
    'user', 'm√°y t√≠nh', 'computer', 'l·ªãch', 'schedule',
    'ƒëƒÉng nh·∫≠p', 'login', 'ƒëƒÉng k√Ω', 'register', 't√†i kho·∫£n', 'account',
    'c√†i ƒë·∫∑t', 'installation', 'h∆∞·ªõng d·∫´n', 'guide', 'troubleshoot',
    'l·ªói', 'error', 'bug', 'fix', 's·ª≠a', 'kh·∫Øc ph·ª•c',
    'ƒë·∫∑t', 'h·ªßy', 'qu·∫£n l√Ω', 'ƒë√°nh gi√°', 'm·∫≠t kh·∫©u', 'password',
    'r·∫£nh', 'tr·ªëng', 'b·∫≠n', 's·ª≠ d·ª•ng', 'd√πng', 'th·ªùi gian',
    'bao nhi√™u', 'khi n√†o', 'l√†m sao', 'c√°ch', 'th·∫ø n√†o',
    'qu√™n', 'forgot', 'reset', 'ƒë·ªïi', 'change', 'thay ƒë·ªïi',
    'admin', 'qu·∫£n tr·ªã', 'management', 'b√°o c√°o', 'reports',
    'th·ªëng k√™', 'statistics', 'ng∆∞·ªùi d√πng', 'users'
  ];

  const adminKeywords = [
    ...userKeywords,
    'admin', 'qu·∫£n tr·ªã', 'management', 'users', 'groups', 'computers',
    'b√°o c√°o', 'reports', 'th·ªëng k√™', 'statistics', 'email', 'smtp',
    'c·∫•u h√¨nh', 'configuration', 'settings', 'api', 'endpoint', 
    'database', 'sqlite', 'react', 'nodejs', 'deployment', 'production'
  ];
  
  const keywords = isAdmin ? adminKeywords : userKeywords;
  const messageLower = message.toLowerCase();
  
  console.log(`Message: "${message}"`);
  console.log(`Lowercase: "${messageLower}"`);
  console.log(`Keywords to check:`, keywords.slice(0, 10), '...');
  
  const matches = keywords.filter(keyword => messageLower.includes(keyword));
  console.log(`Matches found:`, matches);
  
  return matches.length > 0;
}

const testMessages = [
  "T√¥i qu√™n m·∫≠t kh·∫©u th√¨ l√†m th·∫ø n√†o?",
  "C√≥ th·ªÉ ƒë·∫∑t bao nhi√™u m√°y c√πng l√∫c?",
  "L√†m sao bi·∫øt m√°y n√†o ƒëang r·∫£nh?",
  "L√†m sao ƒë√°nh gi√° m√°y sau khi d√πng?",
  "T√¥i l√† admin, l√†m sao qu·∫£n l√Ω ng∆∞·ªùi d√πng?",
  "L√†m sao xem b√°o c√°o th·ªëng k√™?"
];

console.log('üîç Debug AI Logic\n');

testMessages.forEach((message, index) => {
  console.log(`\n${index + 1}. Testing: "${message}"`);
  console.log('‚îÄ'.repeat(50));
  const isRelevant = isRelevantQuestion(message);
  console.log(`Result: ${isRelevant ? '‚úÖ RELEVANT' : '‚ùå NOT RELEVANT'}`);
});
