#!/usr/bin/env node

import { AIService } from './server/services/aiService.js';

console.log('üîç Testing Local AI Stream Direct\n');

const aiService = new AIService();

async function testLocalAIStream() {
  const message = "T√¥i qu√™n m·∫≠t kh·∫©u th√¨ l√†m th·∫ø n√†o?";
  const systemPrompt = `B·∫°n l√† tr·ª£ l√Ω AI th√¢n thi·ªán c·ªßa **Computer Booking System** - h·ªá th·ªëng qu·∫£n l√Ω ƒë·∫∑t m√°y t√≠nh tr·ª±c tuy·∫øn.

üéØ **M·ª§C TI√äU CH√çNH:**
Gi√∫p ng∆∞·ªùi d√πng s·ª≠ d·ª•ng h·ªá th·ªëng ƒë·∫∑t m√°y t√≠nh m·ªôt c√°ch d·ªÖ d√†ng v√† hi·ªáu qu·∫£.

**C√ÇU H·ªéI C·ª¶A NG∆Ø·ªúI D√ôNG:** ${message}

H√£y tr·∫£ l·ªùi d·ª±a tr√™n th√¥ng tin tr√™n, t·∫≠p trung v√†o h∆∞·ªõng d·∫´n th·ª±c t·∫ø v√† d·ªÖ hi·ªÉu. Kh√¥ng s·ª≠ d·ª•ng thu·∫≠t ng·ªØ k·ªπ thu·∫≠t.`;

  console.log(`üì§ Testing: "${message}"`);
  console.log('‚îÄ'.repeat(50));
  
  try {
    await aiService.generateStreamResponse(message, systemPrompt, (chunk) => {
      process.stdout.write(chunk);
    });
    console.log('\n‚îÄ'.repeat(50));
    console.log('‚úÖ Streaming completed');
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.error('Stack:', error.stack);
  }
}

testLocalAIStream();
